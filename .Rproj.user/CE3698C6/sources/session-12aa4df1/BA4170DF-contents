---
title: "Shapefiles 2020"
author: "Diana Villasana Ocampo"
output:
   html_document:
      highlight: tango
      theme: flatly
      toc: yes
      toc_depth: 2
      toc_float:
        collapsed: yes
---
\usepackage{color}

```{=html}
<style>
code.r{
  font-size: 10px;
}
pre {
  font-size: 12px
}
</style>

<style>
body {
text-align: justify;
font-style: normal;
font-family: "Montserrat";
font-size: 12px
}
h1.title {
  font-size: 40px;
  color: #000D3B;
}
h1 {
  color: #B6854D;
}
h2 {
  color: #172984;
}
h3 {
  color: #172984;
}
</style>
```

```{=html}
<style>
.nav>li>a {
    position: relative;
    display: block;
    padding: 10px 15px;
    color: #0A2687;
}
.nav-pills>li.active>a, .nav-pills>li.active>a:hover, .nav-pills>li.active>a:focus {
    color: #ffffff;
    background-color: #09C2BC;
}
</style>
```

```{r, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, cache = FALSE, cache.lazy = FALSE, 
                         eval = FALSE, class.source = "fold-show")
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
options(digits = 2, encoding = "UTF8")
```   
 

```{r, echo=FALSE}
rm(list = ls())
```

```{r, echo=FALSE}
setwd(here::here())
```


```{r}
require(dplyr)
require(forcats)
require(rgdal)
require(tibble)
require(sf)
require(sp)
require(stringr)
```


## Índice de marginación 2020

**Bases de datos***
- Nivel estatal
- Nivel municipal
- Nivel localidad
- Nivel colonias 


```{r}
load("Output/IMC_2020.RData")
```


## Shapefiles

**Shapefile estados 2020**

```{r}
shape_estados <- readOGR(dsn = "E:/MGN/MGN Diciembre 2020/MGN Diciembre 2020/conjunto_de_datos",
                          layer = "00ent",
                            encoding = "UTF-8",
                             use_iconv = TRUE)

shape_estados <- spTransform(shape_estados, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'))
```


**Shapefile municipios 2020**

```{r}
shape_municipios <- readOGR(dsn = "E:/MGN/MGN Diciembre 2020/MGN Diciembre 2020/conjunto_de_datos",
                             layer = "00mun",
                              encoding = "UTF-8",
                               use_iconv = TRUE)

shape_municipios <- spTransform(shape_municipios, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'))
```

**Shapefile colonias (polígonos) 2020**

```{r}
shape_colonias <- readOGR(dsn ="E:/MGN/MGN 2020/IMC_2020_SHP", 
                           layer = "colonias_imc2020",
                             encoding = "UTF-8",
                               use_iconv = TRUE)

shape_colonias <- spTransform(shape_colonias, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'))
```


## ShapefilesDataFrame

**Se seccionan los shapefiles por grado de marginación**

### Estados

```{r}
shape_estados@data <- shape_estados@data %>%
                        select(CVE_ENT)

shape_estados <- shape_estados %>%
                  sp::spChFIDs(., str_pad(shape_estados@data$CVE_ENT, 2, "left", pad = "0"))
```

### Municipios

```{r}
shape_municipios@data <- shape_municipios@data %>%
                          mutate(CVE_MUN = paste0(.$CVE_ENT, .$CVE_MUN)) %>%
                           select(CVE_MUN)

shape_municipios <- shape_municipios %>%
                     sp::spChFIDs(., str_pad(shape_municipios@data$CVE_MUN, 5, "left", pad = "0"))
```


### Colonia

```{r}
shape_colonias@data <- shape_colonias@data %>%
                        select(CVE_COL, GM_2020)

shape_colonias <- shape_colonias %>%
                   sp::spChFIDs(., str_pad(shape_colonias@data$CVE_COL, 10, "left", pad = "0"))
```

#### Capas de colonias

```{r}
table(IMC_2020$GM_2020)
```


- `Muy alto` ~ `1` |  7876 
- `Alto` ~ `2` | 12269
- `Medio` ~ `3` | 18602
- `Bajo` ~ `4` | 20495 
- `Muy bajo` ~ `5` | 14984 


```{r}
capa_colonias_1 <- shape_colonias %>%
                    filter(GM_2020 == "Muy alto")

capa_colonias_2 <- shape_colonias %>%
                    filter(GM_2020 == "Alto")

capa_colonias_3 <- shape_colonias %>%
                    filter(GM_2020 == "Medio")

capa_colonias_4 <- shape_colonias %>%
                    filter(GM_2020 == "Bajo")

capa_colonias_5 <- shape_colonias %>%
                    filter(GM_2020 == "Muy bajo")
```

```{r}
table(IMC_2020$GM_2020)
nrow(capa_colonias_1) 
nrow(capa_colonias_2) 
nrow(capa_colonias_3) 
nrow(capa_colonias_4) 
nrow(capa_colonias_5) 
```

**Se guardan los shapefiles en un archivo `RDS`**

```{r}
saveRDS(shape_estados, "Output/Shapes/shape_estados.rds")
saveRDS(shape_municipios, "Output/Shapes/shape_municipios.rds")
saveRDS(capa_colonias_1, "Output/Shapes/shape_colonias_1.rds")
saveRDS(capa_colonias_2, "Output/Shapes/shape_colonias_2.rds")
saveRDS(capa_colonias_3, "Output/Shapes/shape_colonias_3.rds")
saveRDS(capa_colonias_4, "Output/Shapes/shape_colonias_4.rds")
saveRDS(capa_colonias_5, "Output/Shapes/shape_colonias_5.rds")
```


#### Geojson 

```{r}
require(geojsonio)
capa_estados_json <- geojsonio::geojson_json(shape_estados, geometry = "polygon")
capa_municipios_json <- geojsonio::geojson_json(shape_municipios, geometry = "polygon")
capa_colonias_1_json <- geojsonio::geojson_json(capa_colonias_1 %>%
                                                 sp::spChFIDs(., str_pad(.@data$CVE_COL, 10, "left", pad = "0")), 
                                                  geometry = "polygon")
capa_colonias_2_json <- geojsonio::geojson_json(capa_colonias_2 %>%
                                                 sp::spChFIDs(., str_pad(.@data$CVE_COL, 10, "left", pad = "0")), 
                                                   geometry = "polygon")
capa_colonias_3_json <- geojsonio::geojson_json(capa_colonias_3 %>%
                                                 sp::spChFIDs(., str_pad(.@data$CVE_COL, 10, "left", pad = "0")), 
                                                  geometry = "polygon")
capa_colonias_4_json <- geojsonio::geojson_json(capa_colonias_4 %>%
                                                 sp::spChFIDs(., str_pad(.@data$CVE_COL, 10, "left", pad = "0")), 
                                                  geometry = "polygon")
capa_colonias_5_json <- geojsonio::geojson_json(capa_colonias_5 %>%
                                                    sp::spChFIDs(., str_pad(.@data$CVE_COL, 10, "left", pad = "0")), 
                                                     geometry = "polygon")
```


### Reducción de los mapas 

```{r}
require(rmapshaper)
# Se reduce el tamaño y se guarda como archivo geojason 
capa_estados_mapshaper <- rmapshaper::ms_simplify(capa_estados_json, keep = 0.3, weighting = 0, keep_shapes = TRUE)
capa_municipios_mapshaper <- rmapshaper::ms_simplify(capa_municipios_json, keep = 0.15, weighting = 0, keep_shapes = TRUE)
capa_colonias_1_mapshaper <- rmapshaper::ms_simplify(capa_colonias_1_json, keep = 0.15, weighting = 0, keep_shapes = TRUE)
capa_colonias_2_mapshaper <- rmapshaper::ms_simplify(capa_colonias_2_json, keep = 0.15, weighting = 0, keep_shapes = TRUE)
capa_colonias_3_mapshaper <- rmapshaper::ms_simplify(capa_colonias_3_json, keep = 0.15, weighting = 0, keep_shapes = TRUE)
capa_colonias_4_mapshaper <- rmapshaper::ms_simplify(capa_colonias_4_json, keep = 0.15, weighting = 0, keep_shapes = TRUE)
capa_colonias_5_mapshaper <- rmapshaper::ms_simplify(capa_colonias_5_json, keep = 0.15, weighting = 0, keep_shapes = TRUE)

# Se guarda en un archivo geojson 
geojsonio::geojson_write(capa_estados_mapshaper, file = paste0(here::here(), "/Output/Shapes/estados_json.geojson"))
geojsonio::geojson_write(capa_municipios_mapshaper, file = paste0(here::here(), "/Output/Shapes/municipios_json.geojson"))
geojsonio::geojson_write(capa_colonias_1_mapshaper, file = paste0(here::here(), "/Output/Shapes/colonias_1_json.geojson"))
geojsonio::geojson_write(capa_colonias_2_mapshaper, file = paste0(here::here(), "/Output/Shapes/colonias_2_json.geojson"))
geojsonio::geojson_write(capa_colonias_3_mapshaper, file = paste0(here::here(), "/Output/Shapes/colonias_3_json.geojson"))
geojsonio::geojson_write(capa_colonias_4_mapshaper, file = paste0(here::here(), "/Output/Shapes/colonias_4_json.geojson"))
geojsonio::geojson_write(capa_colonias_5_mapshaper, file = paste0(here::here(), "/Output/Shapes/colonias_5_json.geojson"))
```

```{r}
# Se guarda como objeto
saveRDS(capa_estados_mapshaper, "Output/Shapes/capa_estados_mapshaper.rds")
saveRDS(capa_municipios_mapshaper, "Output/Shapes/capa_municipios_mapshaper.rds")
saveRDS(capa_colonias_1_mapshaper, "Output/Shapes/capa_colonias_1_mapshaper.rds")
saveRDS(capa_colonias_2_mapshaper, "Output/Shapes/capa_colonias_2_mapshaper.rds")
saveRDS(capa_colonias_3_mapshaper, "Output/Shapes/capa_colonias_3_mapshaper.rds")
saveRDS(capa_colonias_4_mapshaper, "Output/Shapes/capa_colonias_4_mapshaper.rds")
saveRDS(capa_colonias_5_mapshaper, "Output/Shapes/capa_colonias_5_mapshaper.rds")
```


```{r, eval  = FALSE}
## Shapefiles
shape_colonias_1 <- geojsonio::geojson_read("Output/Shapes/colonias_1_json.geojson", what = "sp") 
shape_colonias_2 <- geojsonio::geojson_read("Output/Shapes/colonias_2_json.geojson", what = "sp") 
shape_colonias_3 <- geojsonio::geojson_read("Output/Shapes/colonias_3_json.geojson", what = "sp") 
shape_colonias_4 <- geojsonio::geojson_read("Output/Shapes/colonias_4_json.geojson", what = "sp") 
shape_colonias_5 <- geojsonio::geojson_read("Output/Shapes/colonias_5_json.geojson", what = "sp") 
```


### Topojson

```{r}
require(geojsonio)
capa_estados_topojson <- capa_estados_mapshaper %>% geojsonio::geo2topo()
capa_municipios_topojson <- capa_municipios_mapshaper %>% geojsonio::geo2topo()
capa_colonias_1_topojson <- capa_colonias_1_mapshaper %>% geojsonio::geo2topo()
capa_colonias_2_topojson <- capa_colonias_2_mapshaper %>% geojsonio::geo2topo()
capa_colonias_3_topojson <- capa_colonias_3_mapshaper %>% geojsonio::geo2topo()
capa_colonias_4_topojson <- capa_colonias_4_mapshaper %>% geojsonio::geo2topo()
capa_colonias_5_topojson <- capa_colonias_5_mapshaper %>% geojsonio::geo2topo()
```

```{r}
# Se guarda como objeto
saveRDS(capa_estados_topojson, "Output/Shapes/capa_estados_topojson.rds")
saveRDS(capa_municipios_topojson, "Output/Shapes/capa_municipios_topojson.rds")
saveRDS(capa_colonias_1_topojson, "Output/Shapes/capa_colonias_1_topojson.rds")
saveRDS(capa_colonias_2_topojson, "Output/Shapes/capa_colonias_2_topojson.rds")
saveRDS(capa_colonias_3_topojson, "Output/Shapes/capa_colonias_3_topojson.rds")
saveRDS(capa_colonias_4_topojson, "Output/Shapes/capa_colonias_4_topojson.rds")
saveRDS(capa_colonias_5_topojson, "Output/Shapes/capa_colonias_5_topojson.rds")
```

